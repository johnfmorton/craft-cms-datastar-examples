<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Search</title>
    <style>
        .bg-red-400 {
            background-color: rgb(248 113 113) /* #f87171 */;
        }

        .bg-yellow {
            background-color: yellow;
        }

        .whitespace-pre-line {
            white-space: pre-line;
        }
    </style>
</head>
<body>
<div>
    <h1>Datastar Test - v3: Custom events added to work with browser history</h1>
    {# Set the initial value of 'phrase' to the query parameter in the URL on page load. #}
    {% set phrase = craft.app.request.getQueryParam('phrase') ?? '' %}
    <div id="container"
         data-signals="{phrase: phrase, searchCounter: 0, browserHistoryCounter: 0, lastPhrase: '' }">
        <div>
            <label for="phrase">Enter a phrase</label>
            <input type="text"
                   name="phrase"
                   id="phrase"
                   placeholder="What are you looking for?"
                   data-bind-phrase
                   data-on-input__debounce.200ms="($phrase.trim() !== $lastPhrase.trim()) && {{ datastar.get( '_datastar/search-results-v3.twig',{    updateHistory: true} ) }} && $searchCounter++, $lastPhrase = $phrase.trim();"
                   data-on-load="$phrase.length >= 1 && {{ datastar.get('_datastar/search-results-v3.twig'    ) }} && $searchCounter++; $lastPhrase = $phrase.trim();"
                   data-on-historychange="$phrase=evt.detail.phrase; $browserHistoryCounter++; {{ datastar.get('_datastar/search-results-v3.twig',{    updateHistory: false}    ) }}"
            >
            <p>You've used the search <span data-text="$searchCounter"></span> time<span
                        data-show="$searchCounter !== 1">s</span>.</p>

            <h2>data-json-signals:</h2>
            <pre class="whitespace-pre-line bg-yellow" data-json-signals></pre>

            <h2>Debugger</h2>
            <pre id="debugger" class="whitespace-pre-line bg-yellow">debugging info will appear here from _datastar/search-results-v3.twig</pre>
        </div>


        <div id="searchResults">
            <h2>Search results</h2>
            <ul>
                <li>results from _datastar/search-results-v3.twig will appear here</li>
            </ul>
        </div>
    </div>
</div>
<script>
  // define the URL variable to be used later inside the Datastar template called during the search process. That JS is inserted and then removed after execution by Datastar.
  let url;

  const container = document.getElementById('container');
  document.addEventListener('DOMContentLoaded', () => {
    const searchPhrase = document.querySelector('[data-bind-phrase]');

    // set focus on the search input
    searchPhrase.focus();

    window.addEventListener('popstate', (event) => {
      // When the browser navigates back or forward,
      // the current URL already reflects the desired state.
      const currentUrl = new URL(window.location.href);
      const searchPhraseValue = currentUrl.searchParams.get('phrase') || '';

      // Update the input field value, which is bound to the Datastar signal
      searchPhrase.value = searchPhraseValue;

      // a new custom event that we can listen for
      const historyChangeEvent = new CustomEvent('historychange', {
        detail: {
          phrase: searchPhrase.value
        }
      });

      // Dispatch the custom event on the search input
      searchPhrase.dispatchEvent(historyChangeEvent);
    });
  });
</script>

</body>
</html>
