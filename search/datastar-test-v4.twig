<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Search</title>
</head>
<body>
<div>
    <h1>Datastar Test - v4 - showing results</h1>

    {# Set the initial value of 'phrase' to the query parameter in the URL on page load. #}
    {% set phrase = craft.app.request.getQueryParam('phrase') ?? '' %}
    <div id="container"
         data-signals="{phrase: '{{ phrase }}', searchCounter: 0, browserHistoryCounter: 0, lastPhrase: '' }">
        <div id="wrapper" data-on-historychange="$phrase=evt.detail.phrase; $browserHistoryCounter++;">
            <div>
                <label for="phrase">Enter a phrase</label>
                <input type="text"
                       name="phrase"
                       id="phrase"
                       placeholder="What are you looking for?"
                       data-bind-phrase
                       data-on-input__debounce.500ms="($phrase.trim() !== $lastPhrase.trim()) && {{ datastar.get('_datastar/search-v4.twig', {isPopstateEvent: "0"}) }} && $searchCounter++, $lastPhrase = $phrase.trim();"
                       data-on-load="$phrase.length >= 1 &&  {{ datastar.get('_datastar/search-v4.twig') }}; $lastPhrase = $phrase.trim()"
                       data-on-historychange__debounce.500ms="{{ datastar.get('_datastar/search-v4.twig', {isPopstateEvent: "1"}) }}"
                >
                <p>You've used the search <span data-text="$searchCounter"></span> time<span
                            data-show="$searchCounter !== 1">s</span>.</p>
                <code>
                    <pre style="background-color: yellow" data-text="ctx.signals.JSON()"></pre>
                </code>
            </div>

            <div>
                <div id="searchResults">
                    <h2>Search results</h2>
                    <ul>
                        <li>results from _datastar/search-v4.twig will appear here</li>
                    </ul>
                </div>
            </div>

            <div id="debugger">
                    <span>
                        debugging info will appear here from _datastar/search-v4.twig
                    </span>
            </div>
        </div>
    </div>

    <script>
      const wrapperElement = document.getElementById('wrapper');
      document.addEventListener('DOMContentLoaded', () => {
        const searchPhrase = document.querySelector('[data-bind-phrase]');

        searchPhrase.addEventListener('input', (e) => {
          console.log('searchPhrase', e.target.value);
        });

        window.addEventListener('popstate', (event) => {
          isPopstateEvent = true;

          // When the browser navigates back or forward,
          // the current URL already reflects the desired state.
          const currentUrl = new URL(window.location.href);
          const searchPhraseValue = currentUrl.searchParams.get('phrase') || '';
          // Update the input field without triggering another pushState.
          searchPhrase.value = searchPhraseValue;

          // a new custom event that we can listen for
          const historyChangeEvent = new CustomEvent('historychange', {
            detail: {
              phrase: searchPhrase.value,
              isPopstateEvent: true
            }
          }, false);

          // Dispatch the custom event twice
          // first, to change the state of value in DataStar
          wrapperElement.dispatchEvent(historyChangeEvent);
          // second, to trigger the search
          searchPhrase.dispatchEvent(historyChangeEvent);
        });

        // Listen for the history change event
        wrapperElement.addEventListener('historychange', (e) => {
          console.log('historychange event heard', e), false;
        });
      });
    </script>
</div>
</body>
</html>
